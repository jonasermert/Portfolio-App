# Configures the Dart analyzer for static code analysis.
# Shows errors, warnings, and lints in Dart-enabled IDEs and via `flutter analyze`.

include: package:flutter_lints/flutter.yaml

linter:
  rules:
    # Best Practices
    avoid_print: true           # Prevents using print(), use debug loggers instead
    prefer_single_quotes: true  # Encourages consistent use of single quotes
    always_use_package_imports: true  # Prevents relative imports in Flutter projects

    # Code Style
    prefer_const_constructors: true  # Encourages const constructors where possible
    prefer_final_fields: true  # Suggests using final for fields that are not reassigned
    prefer_expression_function_bodies: true  # Makes function bodies more concise

    # Performance
    unnecessary_this: true  # Avoids unnecessary use of `this.`
    avoid_unnecessary_containers: true  # Reduces excessive use of Containers

    # Safety & Maintainability
    always_declare_return_types: true  # Ensures function return types are explicitly declared
    annotate_overrides: true  # Requires @override annotations where applicable
    prefer_typing_uninitialized_variables: true  # Forces explicit types for uninitialized variables
    avoid_void_async: true  # Prevents `async` functions returning `void`, use `Future<void>`

    # Lint Documentation: https://dart.dev/lints